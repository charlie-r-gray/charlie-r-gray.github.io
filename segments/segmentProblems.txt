Blocked on simple problem
=========================

    What was the problem?
Formatting an object when one of them is a variable. ie: gradebook.NAMEHERE.testScores.

    What problem-solving techniques did you use?
Pseudocode. Doesn't tell me formatting, though.
Rubber ducky. It couldn't give me an answer, though.
Googling. It only explained the simple logic, though.
Going for a walk. I didn't gain any new information, though.
'Solving something else' wasn't available because the tests were in order, though.
Console logging. It couldn't understand the variable formatting, though.
Asking a peer. They didn't answer my question, though.
Asking a coach. I solved it on my own before they were actually available, though.

I just tried stuff. I tried gradebook[i][testScores], I tried gradebook[i[testScores]], I tried gradebook.i.testScores, I tried gradebook[i] and just making each student only contain the string 'wings' (which worked, because that formatting wasn't the problem).

Yeah turned out the problem was two-fold: I needed the formatting gradebook[i['testScores']] (or gradebook[i].testScores) AND I needed to declare gradebook[i] BEFORE adding testScores to it - it wouldn't create them at the same time. It was using anything before .testScores purely as a reference for where testScores was.

Nothing I was googling was telling me this. All my results were either too simple (they explained gradebook[i], which was not the problem) or they were too complex (they obfuscated the solution with a bunch of other actions I wasn't familiar with).

It took over two days.



    How did you feel throughout the process?
Tired. Google. Tired. Go for a walk. Tired. Write the pseudo. Annoyed. Go for another walk. Tired. Frustrated. Tired. "I DON'T KNOW. WHAT YOU WANT. TELL ME WHAT YOU WANT." Tired. Reread instructions. Tired. Look at samples; sample formatting passes tests but doesn't follow the instructions. Tired. I asked for help; they didn't help. Frustrated. Cried. Tired. I sleep. I try again the next day. Tired. Tired. Nobody is available to ask. Tired. Angry. Despondent. By sheer dumb luck, I manage to try the formatting I actually needed.

The problem is solved from an empty function, to a finished and refactored one, within 30 minutes.

Never before have I experienced such emotional violence towards inanimate properties.

    What did you learn?
AAAAAAAAHHHHHHHHHHHH
I learned that I've been using primitive variables this whole time and not how to read the object variables where everything is declared differently and it really messed me up because I might've actually come across the answer and just not known it because it was full of so many things that were unfamiliar that I didn't know what I was looking at. So. I mean now I know what String.prototype(`String`) is and how to use `this` but also, fuckfuckfuckfuckfuck.

I also didn't learn that because of anything about the code, I learned that because in my dozens of tabs looking up the problems, they kept using that formatting, and I had to teach myself how to read it in order to recognise that they, also, were not solving my problem.




Solved problem in an elegant way
================================

    What was the problem?
AAAAAHHHH

    What problem-solving techniques did you use?
AAAAAAAAAAAAHHHHHHH
Didn't need them because I already knew what to do, I just needed to google the shit.

    How did you feel throughout the process?
AAAAAAAAAAAHHHHHHHHHH
Tired. Tired. Tired. Tired. Slow. Tired. Tired. Tired.

    What did you learn?
AAAAAAAAHHHHHHHHHHHH
That I'm still too tired from solving problems to be writing this blog post about it right now. Consider this segment a draft.



++++++++++++
Techniques:
++++++++++++

Pseudocode
==========
I'm not very good at this lol. Like it would be helpful, but a lot of the time my problem isn't that I don't know how to code, it's that I don't know what problem I'm solving. So I can't pseudocode "take the array, assign it to this object, put your left hand in, return left hand, console.log('shake it all about')" not because I don't understand what those things are doing, but because I don't understand the problem well enough to know I should be doing that at all.

By the time I know what I'm supposed to be doing, the pseudocode feels less relevant because the code is familiar enough to me that it feels redundant. Why would I psuedo 'take two numbers, add together, return' when (num1, num2) => num1 + num2; is shorter AND solves my problem?

I'm sure that will change once I'm doing stuff that is more complex though, or when I need to do multiple different things. At that point, writing out the code skeleton makes more sense, because it will actually have several 'bones' in it and I want to track how they relate to each other.


Trying something
================
Really vague example lol. If you mean just random fiddling, then yeah something I do a lot, in response to googling/logs. My problems are formatting/syntax most of the time so I'm like, dot notation here? Would you like some brackets? Braces? What if I temporarily swapped out your variable for a string to check what you were returning?


Rubber ducky method
===================
loooool yeah. I bring my 'emotional support specialist', Leske the plush alligator, as my rubber ducky. Unfortunately he doesn't know syntax so he doesn't point out when I'm missing braces. He's not doing a good job actually solving any problems. But he is very cute and he looks very sympathetic.


Reading error messages
======================
Depending on the error messages. They do tell the problem (variable was never declared, .method('s param) isn't a function) and they also point out what line threw the error. So that's great. Errors from 'assert' tests feel bogus, though. They don't tell me what the problem is. They just inform me that they don't have the solution. Trying to problem-solve using tests is just. THE WORST.


Console.logging
===============
lol I like this one and use it a lot. It probably isn't as friendly to other devs, though. But it helps me determine what part is doing the wrong thing - like, a line might throw an error that it can't do its job, but the problem isn't the line - the line may be written correctly. A line prior might actually be wrong, and have passed on bad information. So the erroring line is catching the blame for the earlier line's fuck up. Console logging is great for confirming that each part is outputting what I expected.


Googling
========
This is my usual method of problem-solving. What is the syntax for this? What does this error mean? Remind me how to format arrow functions. Remind me about ternary operators. How should I be formatting this method?

Okay, I don't actually know what I'm doing at all. Let me look up the challenge itself: how do I add keys to an object? How do I capitalise a string? How do I pick out PART of a string, how do I keep 'chunks' of a string to return later?


Asking your peers for help; asking coaches for help
===================================================
Not so good at asking for help in general, because it takes them too long to reply: time to notice I need help, then time to catch up and determine what I'm doing, then time to help address my problem. Time time time. And in the meanTIME, I'm still frustrated trying to solve the problem myself because I don't have anything else to do until they get back to me, so I may as well keep picking at it.

And what usually ends up happening is that I solve it by myself anyway, often within minutes of asking for help. Their help is often not necessarily helpful, either - they're explaining logic when I need syntax, they don't know much more than I do and pass me bad information, they info-dump instead of just answering my question, or they're deliberately not trying to help me 'too much' by being evasive about what I should look up and not giving me any new information at all.

I don't bother to ask for help because most of the time, I solve my problems without it, I get frustrated waiting for it, and the help I get isn't enough or only hands me new problems. It's not that I don't know there's help available, it's just that it's far too slow.


Improving your process with reflection
======================================
I'm too fucking tired to reflect right now. I need a goddamn break, and reimmersing myself back into the pain that consumed me for nearly three days ain't it, chief.


